# Generated by Django 2.1.7 on 2019-11-02 19:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blocking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(verbose_name='Причина блокировки')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания блокировки')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата истекания блокировки')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Комментарий')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='О себе')),
                ('email', models.CharField(max_length=50, verbose_name='Почта')),
                ('role', models.IntegerField(choices=[(1, 'Пользователь'), (2, 'Модератор'), (3, 'Администратор')], default=1, verbose_name='Роль')),
                ('date_registration', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('status', models.IntegerField(choices=[(1, 'Активный'), (2, 'Заблокированный'), (3, 'Неподтвержденная регистрация')], default=1, verbose_name='Статус')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='custom_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание термина')),
                ('examples', models.TextField(verbose_name='Примеры использования')),
                ('date', models.DateTimeField(blank=True, verbose_name='Дата публикации')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='definitions', to='website.CustomUser', verbose_name='Автор')),
            ],
        ),
        migrations.CreateModel(
            name='Estimate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimate', models.IntegerField(choices=[(1, 'Like'), (2, 'Dislike')], default=1, verbose_name='Оценка')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='website.Definition', verbose_name='Ссылка на определение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estimates', to='website.CustomUser', verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Favorites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='website.Definition', verbose_name='Ссылка на определение')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Ссылка на пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(verbose_name='Текст уведомления')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата уведомления')),
                ('action_id', models.CharField(max_length=30, verbose_name='ID события')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Ссылка на пользователя')),
            ],
        ),
        migrations.CreateModel(
            name='RequestForPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Новый'), (2, 'Отклонен'), (3, 'Опубликован'), (4, 'Навсегда отклонен')], default=1, verbose_name='Статус публикации')),
                ('reason', models.TextField(verbose_name='Причина отклонения')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания запроса')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='website.Definition', verbose_name='Ссылка на определение')),
                ('old_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.RequestForPublication', verbose_name='Старый запрос на публикацию')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Термин')),
            ],
        ),
        migrations.CreateModel(
            name='UploadData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header_for_file', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='website.Definition', verbose_name='Ссылка на определение')),
            ],
        ),
        migrations.AddField(
            model_name='definition',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='definitions', to='website.Term', verbose_name='Термин'),
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='website.CustomUser', verbose_name='Автор комментария'),
        ),
        migrations.AddField(
            model_name='comment',
            name='definition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='website.Definition', verbose_name='Ссылка на определение'),
        ),
        migrations.AddField(
            model_name='comment',
            name='other_comment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='website.Comment', verbose_name='Корневой комментарий'),
        ),
        migrations.AddField(
            model_name='blocking',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='blocking', to='website.CustomUser', verbose_name='Пользователь'),
        ),
    ]
